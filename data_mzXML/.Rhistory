5+3
library("FSelector")
#using train function for hyperparamaters optimization
library(caret)
library(randomForest)
install.packages("FSelector")
library("FSelector")
library(FSelector)
install.packages("FSelector")
install.packages("FSelector")
library(FSelector)
dyn.load('/Library/Java/JavaVirtualMachines/jdk10.0.1.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_162.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_162.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
install.packages("FSelector")
library(FSelector)
library(rJava)
install.packages("rJava")
library(rJava)
install.packages("ggplot2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install()
BiocManager::install()
library(BiocManager)
BiocManager::available()
library(xcms)
BiocManager::install("xcms")
library(xcms)
?xcms
library(faahKO)
library(xcms)
BiocManager::install("faahKO")
library(faahKO)
BiocManager::install("RColorBrewer")
update.packages("libcoin")
update.packages()
install.packages("devtools")
update_packages()
update.packages("libcoin")
packageVersion("libcoin")
install.packages("libcoin")
Sys.getenv("PATH")
Sys.which("make")
which gcc
Sys.which("gcc")
update.packages("libcoin")
packageVersion("libcoin")
update.packages("libcoin")
BiocManager::install("RColorBrewer")
BiocManager::install("RColorBrewer")
update.packages()
update.packages()
BiocManager::install("pander")
BiocManager::install("pander")
BiocManager::install("pander")
BiocManager::install("pander")
BiocManager::install("pander")
BiocManager::install("pander")
BiocManager::install("pander")
BiocManager::install("pander")
library(pander)
BiocManager::install("pander")
BiocManager::install("pander")
BiocManager::install("MSnbase")
BiocManager::install("MSnbase")
install.packages("ggplot2")
BiocManager::install("MSnbase")
BiocManager::install("MSnbase")
install.packages("ggplot2")
BiocManager::install("MSnbase")
library(xcms)
library(MSnbase)
library(pander)
install.packages("pander")
library(pander)
?pander
BiocManager::install("pander")
package_version(xcms)
library(xcms)
package_version(xcms)
package_version("xcms")
package_version(bioconductor)
browseVignettes("xcms")
browseVignettes(xcms)
browseVignettes("xcms")
# browseVignettes("xcms") check version of xcms
library(faahKO)
library(RColorBrewer)
library(pander)
library(magrittr)
library(pheatmap)
browseVignettes("pheatmap")
browseVignettes(pheatmap)
citation("xcms")
browseVignettes()
browseVignettes("Bioconductor")
tools:::.BioC_version_associated_with_R_version()
source("https://bioconductor.org/biocLite.R")
biocLite("BiocUpgrade")
help("Deprecated")
tools:::.BioC_version_associated_with_R_version()
biocLite("BiocUpgrade")
source("https://bioconductor.org/biocLite.R")
?biocLite
biocLite()
BiocManager::version()
BiocManager::install
BiocManager::install()
BiocManager::version()
BiocManager::install("xcms")
library(xcms)
BiocManager::version("xcms")
BiocManager::version()
browseVignettes("xcms")
source("https://bioconductor.org/biocLite.R")
biocLite("xcms")
BiocManager::install("xcms")
help(xcms)
help("xcms")
library(xcms)
3390+2500+4500+1300+200
10000*1.04
19+17+17
+!4
53+14
setwd("~/Desktop/GFSC/Projects/Rice Authentication Project/GC_data_msZXL/")
library(devtools)
library(adegenet)
library(ggbiplot)
library(factoextra)
library(pca3d)
#               group = group,
#               ellipse = T,
#               circle = T,
#               ellipse.prob = prob,
#               choices = c(p1, p2),
#               var.axes = FALSE
#               )+theme(legend.position = "bottom",axis.ticks=element_line(colour="black"),
#                       panel.border=element_rect(fill=NA))+ggtitle("PCA")
#   print(g)
# }
data <- read.csv("data.csv")
grand <-data
grand_pca <-prcomp(grand[,-1])
# summary(grand_pca)
str(grand_pca)
ggbiplot(grand_pca,ellipse=TRUE, groups=grand$Location
)
setwd("~/Desktop/GFSC/Projects/Rice Authentication Project/GC_data_msZXL/")
library(xcms)
cdfpath <- file.path('.')
cdffiles <- list.files(cdfpath, recursive = TRUE, full.names = TRUE, pattern='*.mzXML')
xset <- xcmsSet(cdffiles, method = "matchedFilter", fwhm=3, snthresh=10, max=100, step=0.25, steps=2, mzdiff=0.5)
xset <- group(xset)
